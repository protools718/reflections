How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By listing modification group together and specifiying if it was added or removed/

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It help trace modification that may have led to bugs

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A pro would be the ability to create a commit when a significant change has occurred.
    A con would be since the you as the individual decides when the commit should occur, It is easy to create to many commits which can lead to confusion or not committing often enough to track logical changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In many circumstance you can be working on multiple files that are interdependent on each other.

How can you use the commands git log and git diff to view the history of files?

    git log will list commits
    git diff will allow you to compare different commits

How might using version control make you more confident to make changes that
could break something?

    By allow you checkout earlier commits breaking code or introducing bugs is less of concern since you can revert to earlier versions which will allow you to trace and track problems.

Now that you have your workspace set up, what do you want to try using Git for?

    I plan to use git for the shell and python scripts I plan to work on.
